
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "WP2geo_modeling\01_POC_generate-model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_WP2geo_modeling_01_POC_generate-model.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_WP2geo_modeling_01_POC_generate-model.py:


Generating a geological model and simulate its gravity
======================================================

The following tutorial will step-by-step lead you through an example workflow on creating a GemPy model from interface and orientation data, assigning densities to geological units,
and model their gravity response.

.. GENERATED FROM PYTHON SOURCE LINES 9-15

Create the base Proof-of-Concept Model
======================================

Based on a seismic section from the NAGRA report [NAGRA NAB 14-17](https://www.nagra.ch/data/documents/database/dokumente/$default/Default%20Folder/Publikationen/NABs%202004%20-%202015/d_nab14-017.pdf), we extracted interface and orientation points for lithological units and faults.  

The lithological units comprise the permo-carboniferous filling (divided in three stages based on the report results), Mesozoic, Tertiary, and Quaternary strata, as well as the Palaeozoic crystalline basement rocks.

.. GENERATED FROM PYTHON SOURCE LINES 15-33

.. code-block:: default


    import warnings
    warnings.filterwarnings("ignore")

    # Importing GemPy
    import gempy as gp
    from gempy.plot import visualization_2d as vv

    # Importing auxilary libraries
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    import matplotlib.image as mpimg

    # What GemPy version was used
    print(f"Code run with GemPy version: {gp.__version__}")






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Code run with GemPy version: 2.2.9




.. GENERATED FROM PYTHON SOURCE LINES 34-37

Initialize the model
--------------------
We start with modelling the trough by generating a gempy model object. This will use interface points and orientations, which we previously stored in a `.csv` file.

.. GENERATED FROM PYTHON SOURCE LINES 37-52

.. code-block:: default


    # Fix random number seed to get the same topography
    np.random.seed(333)
    # Import data
    # Create a model instance
    geo_model = gp.create_model('POC_model')

    # Initialize the model, set dimension and load interface and orientation data
    gp.init_data(geo_model, [0, 28000., 0, 14000., -6500, 1000.], [100, 50, 60],
                path_i = '../../data/GemPy/line82_interfaces_wo_middle_MC.csv',
                path_o = '../../data/GemPy/line82_foliations_wo_middle_MC.csv');
    geo_model.set_topography(source='random', d_z=np.array([300,1000]));

    gp.plot_2d(geo_model, show_data=True, show_topography=True);




.. image:: /WP2geo_modeling/images/sphx_glr_01_POC_generate-model_001.png
    :alt: Cell Number: mid Direction: y
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Active grids: ['regular']
    Active grids: ['regular' 'topography']

    <gempy.plot.visualization_2d.Plot2D object at 0x0000022C99C5F070>



.. GENERATED FROM PYTHON SOURCE LINES 53-56

Adding information to the model
-------------------------------
Only loading interface and orientation points is not enough. First, let's assign colors to the different model units, e.g. for coloring faults similarly.

.. GENERATED FROM PYTHON SOURCE LINES 56-72

.. code-block:: default


    col_dict = {'basement': '#c7848f',
               'Lower-filling': '#a5d490', 
               'Upper-filling': '#cfc199',
               'Unconformity': '#725c9a',
               'Orange': '#ff792b',
               'Pink': '#e588f3',
               'Tertiary': '#dbdbac',
               'Fault2': '#015482',
               'Fault5': '#015482',
               'Fault6': '#015482',
               'Thrust1_south': '#5DA629',
               'Thrust2_south': '#5DA629'}
    geo_model.surfaces.colors.change_colors(col_dict)
    geo_model.surfaces






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style  type="text/css" >
    #T_6cb4d_row0_col3,#T_6cb4d_row1_col3,#T_6cb4d_row2_col3{
                background-color:  #015482;
            }#T_6cb4d_row3_col3{
                background-color:  #a5d490;
            }#T_6cb4d_row4_col3{
                background-color:  #cfc199;
            }#T_6cb4d_row5_col3{
                background-color:  #725c9a;
            }#T_6cb4d_row6_col3{
                background-color:  #dbdbac;
            }#T_6cb4d_row7_col3{
                background-color:  #ff792b;
            }#T_6cb4d_row8_col3{
                background-color:  #e588f3;
            }#T_6cb4d_row9_col3,#T_6cb4d_row10_col3{
                background-color:  #5DA629;
            }#T_6cb4d_row11_col3{
                background-color:  #c7848f;
            }</style><table id="T_6cb4d_" ><thead>    <tr>        <th class="blank level0" ></th>        <th class="col_heading level0 col0" >surface</th>        <th class="col_heading level0 col1" >series</th>        <th class="col_heading level0 col2" >order_surfaces</th>        <th class="col_heading level0 col3" >color</th>        <th class="col_heading level0 col4" >id</th>    </tr></thead><tbody>
                    <tr>
                            <th id="T_6cb4d_level0_row0" class="row_heading level0 row0" >0</th>
                            <td id="T_6cb4d_row0_col0" class="data row0 col0" >Fault2</td>
                            <td id="T_6cb4d_row0_col1" class="data row0 col1" >Default series</td>
                            <td id="T_6cb4d_row0_col2" class="data row0 col2" >1</td>
                            <td id="T_6cb4d_row0_col3" class="data row0 col3" >#015482</td>
                            <td id="T_6cb4d_row0_col4" class="data row0 col4" >1</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row1" class="row_heading level0 row1" >1</th>
                            <td id="T_6cb4d_row1_col0" class="data row1 col0" >Fault5</td>
                            <td id="T_6cb4d_row1_col1" class="data row1 col1" >Default series</td>
                            <td id="T_6cb4d_row1_col2" class="data row1 col2" >2</td>
                            <td id="T_6cb4d_row1_col3" class="data row1 col3" >#015482</td>
                            <td id="T_6cb4d_row1_col4" class="data row1 col4" >2</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row2" class="row_heading level0 row2" >2</th>
                            <td id="T_6cb4d_row2_col0" class="data row2 col0" >Fault6</td>
                            <td id="T_6cb4d_row2_col1" class="data row2 col1" >Default series</td>
                            <td id="T_6cb4d_row2_col2" class="data row2 col2" >3</td>
                            <td id="T_6cb4d_row2_col3" class="data row2 col3" >#015482</td>
                            <td id="T_6cb4d_row2_col4" class="data row2 col4" >3</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row3" class="row_heading level0 row3" >3</th>
                            <td id="T_6cb4d_row3_col0" class="data row3 col0" >Lower-filling</td>
                            <td id="T_6cb4d_row3_col1" class="data row3 col1" >Default series</td>
                            <td id="T_6cb4d_row3_col2" class="data row3 col2" >4</td>
                            <td id="T_6cb4d_row3_col3" class="data row3 col3" >#a5d490</td>
                            <td id="T_6cb4d_row3_col4" class="data row3 col4" >4</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row4" class="row_heading level0 row4" >4</th>
                            <td id="T_6cb4d_row4_col0" class="data row4 col0" >Upper-filling</td>
                            <td id="T_6cb4d_row4_col1" class="data row4 col1" >Default series</td>
                            <td id="T_6cb4d_row4_col2" class="data row4 col2" >5</td>
                            <td id="T_6cb4d_row4_col3" class="data row4 col3" >#cfc199</td>
                            <td id="T_6cb4d_row4_col4" class="data row4 col4" >5</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row5" class="row_heading level0 row5" >5</th>
                            <td id="T_6cb4d_row5_col0" class="data row5 col0" >Unconformity</td>
                            <td id="T_6cb4d_row5_col1" class="data row5 col1" >Default series</td>
                            <td id="T_6cb4d_row5_col2" class="data row5 col2" >6</td>
                            <td id="T_6cb4d_row5_col3" class="data row5 col3" >#725c9a</td>
                            <td id="T_6cb4d_row5_col4" class="data row5 col4" >6</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row6" class="row_heading level0 row6" >6</th>
                            <td id="T_6cb4d_row6_col0" class="data row6 col0" >Tertiary</td>
                            <td id="T_6cb4d_row6_col1" class="data row6 col1" >Default series</td>
                            <td id="T_6cb4d_row6_col2" class="data row6 col2" >7</td>
                            <td id="T_6cb4d_row6_col3" class="data row6 col3" >#dbdbac</td>
                            <td id="T_6cb4d_row6_col4" class="data row6 col4" >7</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row7" class="row_heading level0 row7" >7</th>
                            <td id="T_6cb4d_row7_col0" class="data row7 col0" >Orange</td>
                            <td id="T_6cb4d_row7_col1" class="data row7 col1" >Default series</td>
                            <td id="T_6cb4d_row7_col2" class="data row7 col2" >8</td>
                            <td id="T_6cb4d_row7_col3" class="data row7 col3" >#ff792b</td>
                            <td id="T_6cb4d_row7_col4" class="data row7 col4" >8</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row8" class="row_heading level0 row8" >8</th>
                            <td id="T_6cb4d_row8_col0" class="data row8 col0" >Pink</td>
                            <td id="T_6cb4d_row8_col1" class="data row8 col1" >Default series</td>
                            <td id="T_6cb4d_row8_col2" class="data row8 col2" >9</td>
                            <td id="T_6cb4d_row8_col3" class="data row8 col3" >#e588f3</td>
                            <td id="T_6cb4d_row8_col4" class="data row8 col4" >9</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row9" class="row_heading level0 row9" >9</th>
                            <td id="T_6cb4d_row9_col0" class="data row9 col0" >Thrust1_south</td>
                            <td id="T_6cb4d_row9_col1" class="data row9 col1" >Default series</td>
                            <td id="T_6cb4d_row9_col2" class="data row9 col2" >10</td>
                            <td id="T_6cb4d_row9_col3" class="data row9 col3" >#5DA629</td>
                            <td id="T_6cb4d_row9_col4" class="data row9 col4" >10</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row10" class="row_heading level0 row10" >10</th>
                            <td id="T_6cb4d_row10_col0" class="data row10 col0" >Thrust2_south</td>
                            <td id="T_6cb4d_row10_col1" class="data row10 col1" >Default series</td>
                            <td id="T_6cb4d_row10_col2" class="data row10 col2" >11</td>
                            <td id="T_6cb4d_row10_col3" class="data row10 col3" >#5DA629</td>
                            <td id="T_6cb4d_row10_col4" class="data row10 col4" >11</td>
                </tr>
                <tr>
                            <th id="T_6cb4d_level0_row11" class="row_heading level0 row11" >11</th>
                            <td id="T_6cb4d_row11_col0" class="data row11 col0" >basement</td>
                            <td id="T_6cb4d_row11_col1" class="data row11 col1" >Basement</td>
                            <td id="T_6cb4d_row11_col2" class="data row11 col2" >1</td>
                            <td id="T_6cb4d_row11_col3" class="data row11 col3" >#c7848f</td>
                            <td id="T_6cb4d_row11_col4" class="data row11 col4" >12</td>
                </tr>
        </tbody></table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 73-77

Model Characteristics  
---------------------
Main features of the model is the asymetric graben system, with the major fault (denoted with **A**), and the graben fill, which is not present beyond the graben shoulders. This, as well as the stop of major faults beneath the mesozoic units (blue units) are important considerations for the modelling process.  
These could be caught, for instance, in likelihood functions if we model the PCT as a Bayesian inference problem.

.. GENERATED FROM PYTHON SOURCE LINES 77-93

.. code-block:: default


    # Assign formations to series
    gp.map_series_to_surfaces(geo_model,
                             {"Thrust1_series": 'Thrust1_south',
                              "Thrust2_series": 'Thrust2_south',
                              "Fault2_series": 'Fault2',
                              "Fault5_series": 'Fault5',
                              "Fault6_series": 'Fault6',
                             "Post_tectonic_series": ('Tertiary', 'Pink', 'Orange'),
                              "Detachement": 'Unconformity',
                             "Syn_tectonic_series2": 'Upper-filling',
                             #"Syn_tectonic_series1": 'Middle-filling',
                             "Pre_tectonic_series": 'Lower-filling'},
                             remove_unused_series=True)
    geo_model.surfaces






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style  type="text/css" >
    #T_6dcc1_row0_col3,#T_6dcc1_row1_col3{
                background-color:  #5DA629;
            }#T_6dcc1_row2_col3,#T_6dcc1_row3_col3,#T_6dcc1_row4_col3{
                background-color:  #015482;
            }#T_6dcc1_row5_col3{
                background-color:  #dbdbac;
            }#T_6dcc1_row6_col3{
                background-color:  #ff792b;
            }#T_6dcc1_row7_col3{
                background-color:  #e588f3;
            }#T_6dcc1_row8_col3{
                background-color:  #725c9a;
            }#T_6dcc1_row9_col3{
                background-color:  #cfc199;
            }#T_6dcc1_row10_col3{
                background-color:  #a5d490;
            }#T_6dcc1_row11_col3{
                background-color:  #c7848f;
            }</style><table id="T_6dcc1_" ><thead>    <tr>        <th class="blank level0" ></th>        <th class="col_heading level0 col0" >surface</th>        <th class="col_heading level0 col1" >series</th>        <th class="col_heading level0 col2" >order_surfaces</th>        <th class="col_heading level0 col3" >color</th>        <th class="col_heading level0 col4" >id</th>    </tr></thead><tbody>
                    <tr>
                            <th id="T_6dcc1_level0_row0" class="row_heading level0 row0" >9</th>
                            <td id="T_6dcc1_row0_col0" class="data row0 col0" >Thrust1_south</td>
                            <td id="T_6dcc1_row0_col1" class="data row0 col1" >Thrust1_series</td>
                            <td id="T_6dcc1_row0_col2" class="data row0 col2" >1</td>
                            <td id="T_6dcc1_row0_col3" class="data row0 col3" >#5DA629</td>
                            <td id="T_6dcc1_row0_col4" class="data row0 col4" >1</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row1" class="row_heading level0 row1" >10</th>
                            <td id="T_6dcc1_row1_col0" class="data row1 col0" >Thrust2_south</td>
                            <td id="T_6dcc1_row1_col1" class="data row1 col1" >Thrust2_series</td>
                            <td id="T_6dcc1_row1_col2" class="data row1 col2" >1</td>
                            <td id="T_6dcc1_row1_col3" class="data row1 col3" >#5DA629</td>
                            <td id="T_6dcc1_row1_col4" class="data row1 col4" >2</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row2" class="row_heading level0 row2" >0</th>
                            <td id="T_6dcc1_row2_col0" class="data row2 col0" >Fault2</td>
                            <td id="T_6dcc1_row2_col1" class="data row2 col1" >Fault2_series</td>
                            <td id="T_6dcc1_row2_col2" class="data row2 col2" >1</td>
                            <td id="T_6dcc1_row2_col3" class="data row2 col3" >#015482</td>
                            <td id="T_6dcc1_row2_col4" class="data row2 col4" >3</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row3" class="row_heading level0 row3" >1</th>
                            <td id="T_6dcc1_row3_col0" class="data row3 col0" >Fault5</td>
                            <td id="T_6dcc1_row3_col1" class="data row3 col1" >Fault5_series</td>
                            <td id="T_6dcc1_row3_col2" class="data row3 col2" >1</td>
                            <td id="T_6dcc1_row3_col3" class="data row3 col3" >#015482</td>
                            <td id="T_6dcc1_row3_col4" class="data row3 col4" >4</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row4" class="row_heading level0 row4" >2</th>
                            <td id="T_6dcc1_row4_col0" class="data row4 col0" >Fault6</td>
                            <td id="T_6dcc1_row4_col1" class="data row4 col1" >Fault6_series</td>
                            <td id="T_6dcc1_row4_col2" class="data row4 col2" >1</td>
                            <td id="T_6dcc1_row4_col3" class="data row4 col3" >#015482</td>
                            <td id="T_6dcc1_row4_col4" class="data row4 col4" >5</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row5" class="row_heading level0 row5" >6</th>
                            <td id="T_6dcc1_row5_col0" class="data row5 col0" >Tertiary</td>
                            <td id="T_6dcc1_row5_col1" class="data row5 col1" >Post_tectonic_series</td>
                            <td id="T_6dcc1_row5_col2" class="data row5 col2" >1</td>
                            <td id="T_6dcc1_row5_col3" class="data row5 col3" >#dbdbac</td>
                            <td id="T_6dcc1_row5_col4" class="data row5 col4" >6</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row6" class="row_heading level0 row6" >7</th>
                            <td id="T_6dcc1_row6_col0" class="data row6 col0" >Orange</td>
                            <td id="T_6dcc1_row6_col1" class="data row6 col1" >Post_tectonic_series</td>
                            <td id="T_6dcc1_row6_col2" class="data row6 col2" >2</td>
                            <td id="T_6dcc1_row6_col3" class="data row6 col3" >#ff792b</td>
                            <td id="T_6dcc1_row6_col4" class="data row6 col4" >7</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row7" class="row_heading level0 row7" >8</th>
                            <td id="T_6dcc1_row7_col0" class="data row7 col0" >Pink</td>
                            <td id="T_6dcc1_row7_col1" class="data row7 col1" >Post_tectonic_series</td>
                            <td id="T_6dcc1_row7_col2" class="data row7 col2" >3</td>
                            <td id="T_6dcc1_row7_col3" class="data row7 col3" >#e588f3</td>
                            <td id="T_6dcc1_row7_col4" class="data row7 col4" >8</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row8" class="row_heading level0 row8" >5</th>
                            <td id="T_6dcc1_row8_col0" class="data row8 col0" >Unconformity</td>
                            <td id="T_6dcc1_row8_col1" class="data row8 col1" >Detachement</td>
                            <td id="T_6dcc1_row8_col2" class="data row8 col2" >1</td>
                            <td id="T_6dcc1_row8_col3" class="data row8 col3" >#725c9a</td>
                            <td id="T_6dcc1_row8_col4" class="data row8 col4" >9</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row9" class="row_heading level0 row9" >4</th>
                            <td id="T_6dcc1_row9_col0" class="data row9 col0" >Upper-filling</td>
                            <td id="T_6dcc1_row9_col1" class="data row9 col1" >Syn_tectonic_series2</td>
                            <td id="T_6dcc1_row9_col2" class="data row9 col2" >1</td>
                            <td id="T_6dcc1_row9_col3" class="data row9 col3" >#cfc199</td>
                            <td id="T_6dcc1_row9_col4" class="data row9 col4" >10</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row10" class="row_heading level0 row10" >3</th>
                            <td id="T_6dcc1_row10_col0" class="data row10 col0" >Lower-filling</td>
                            <td id="T_6dcc1_row10_col1" class="data row10 col1" >Pre_tectonic_series</td>
                            <td id="T_6dcc1_row10_col2" class="data row10 col2" >1</td>
                            <td id="T_6dcc1_row10_col3" class="data row10 col3" >#a5d490</td>
                            <td id="T_6dcc1_row10_col4" class="data row10 col4" >11</td>
                </tr>
                <tr>
                            <th id="T_6dcc1_level0_row11" class="row_heading level0 row11" >11</th>
                            <td id="T_6dcc1_row11_col0" class="data row11 col0" >basement</td>
                            <td id="T_6dcc1_row11_col1" class="data row11 col1" >Basement</td>
                            <td id="T_6dcc1_row11_col2" class="data row11 col2" >1</td>
                            <td id="T_6dcc1_row11_col3" class="data row11 col3" >#c7848f</td>
                            <td id="T_6dcc1_row11_col4" class="data row11 col4" >12</td>
                </tr>
        </tbody></table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 94-96

After assigning units to stacks or series, we have so define which of those series is a fault. Here, we see that it is usually important to assign each fault its own series, as faults may have very different 
scalar fields (in which the fault surfaces are interpolated).

.. GENERATED FROM PYTHON SOURCE LINES 96-101

.. code-block:: default


    geo_model.set_is_fault(['Thrust1_series', 'Thrust2_series',
                            'Fault2_series', 'Fault5_series', 'Fault6_series'],
                          change_color=False);






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>order_series</th>
          <th>BottomRelation</th>
          <th>isActive</th>
          <th>isFault</th>
          <th>isFinite</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Thrust1_series</th>
          <td>1</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Thrust2_series</th>
          <td>2</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Fault2_series</th>
          <td>3</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Fault5_series</th>
          <td>4</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Fault6_series</th>
          <td>5</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Post_tectonic_series</th>
          <td>6</td>
          <td>Erosion</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Detachement</th>
          <td>7</td>
          <td>Erosion</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Syn_tectonic_series2</th>
          <td>8</td>
          <td>Erosion</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Pre_tectonic_series</th>
          <td>9</td>
          <td>Erosion</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Basement</th>
          <td>10</td>
          <td>Erosion</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 102-103

Further we have to set bottom relations, if a series is **not** erosive. For instance, the Units in the Graben are most likely onlapping units.

.. GENERATED FROM PYTHON SOURCE LINES 103-107

.. code-block:: default

    geo_model.set_bottom_relation(series=['Post_tectonic_series', 
                                          'Pre_tectonic_series',
                                          'Syn_tectonic_series2'], bottom_relation='Onlap') #,






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>order_series</th>
          <th>BottomRelation</th>
          <th>isActive</th>
          <th>isFault</th>
          <th>isFinite</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Thrust1_series</th>
          <td>1</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Thrust2_series</th>
          <td>2</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Fault2_series</th>
          <td>3</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Fault5_series</th>
          <td>4</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Fault6_series</th>
          <td>5</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Post_tectonic_series</th>
          <td>6</td>
          <td>Onlap</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Detachement</th>
          <td>7</td>
          <td>Erosion</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Syn_tectonic_series2</th>
          <td>8</td>
          <td>Onlap</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Pre_tectonic_series</th>
          <td>9</td>
          <td>Onlap</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Basement</th>
          <td>10</td>
          <td>Erosion</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 108-110

The following table shows the fault relations, i.e. which unit (or fault) is affected by a fault. If the respective entry in the table is set to `True`, the fault on the left displaces the unit (or fault) in a respective
column.

.. GENERATED FROM PYTHON SOURCE LINES 110-113

.. code-block:: default


    geo_model.faults.faults_relations_df






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Thrust1_series</th>
          <th>Thrust2_series</th>
          <th>Fault2_series</th>
          <th>Fault5_series</th>
          <th>Fault6_series</th>
          <th>Post_tectonic_series</th>
          <th>Detachement</th>
          <th>Syn_tectonic_series2</th>
          <th>Pre_tectonic_series</th>
          <th>Basement</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Thrust1_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
        </tr>
        <tr>
          <th>Thrust2_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
        </tr>
        <tr>
          <th>Fault2_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
        </tr>
        <tr>
          <th>Fault5_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
        </tr>
        <tr>
          <th>Fault6_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
        </tr>
        <tr>
          <th>Post_tectonic_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Detachement</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Syn_tectonic_series2</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Pre_tectonic_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Basement</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 114-115

Per default, faults displace all lithological units. However, the normal faults of the graben do not affect the younger units, so we define a boolean matrix, which  sets the fault relations correctly.

.. GENERATED FROM PYTHON SOURCE LINES 115-129

.. code-block:: default


    fr = np.array([[False, True, False, False, False, True, False, False,   False, False],
                   [False, False, False, False, False, True, False, False,  False, False],
                   [False, False, False, False, False, False, True, True,  True, True],
                   [False, False, False, False, False, False, True, True,  True, True],
                   [False, False, False, False, False, False, True, True,  True, True],
                   [False, False, False, False, False, False, False, False, False, False],
                   [False, False, False, False, False, False, False, False, False, False],
                   [False, False, False, False, False, False, False, False, False, False],
                   [False, False, False, False, False, False, False, False, False, False],
                   [False, False, False, False, False, False, False, False, False, False]])
    geo_model.set_fault_relation(fr)







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Thrust1_series</th>
          <th>Thrust2_series</th>
          <th>Fault2_series</th>
          <th>Fault5_series</th>
          <th>Fault6_series</th>
          <th>Post_tectonic_series</th>
          <th>Detachement</th>
          <th>Syn_tectonic_series2</th>
          <th>Pre_tectonic_series</th>
          <th>Basement</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Thrust1_series</th>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Thrust2_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Fault2_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
        </tr>
        <tr>
          <th>Fault5_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
        </tr>
        <tr>
          <th>Fault6_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
          <td>True</td>
        </tr>
        <tr>
          <th>Post_tectonic_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Detachement</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Syn_tectonic_series2</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Pre_tectonic_series</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Basement</th>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 130-133

Creating the model
------------------
Now that we set the parameters and fault relations, it is time to start the modeling process:

.. GENERATED FROM PYTHON SOURCE LINES 133-148

.. code-block:: default


    # decrease the kriging range
    geo_model.modify_kriging_parameters('range', 20000.)
    geo_model.modify_kriging_parameters('$C_o$', 2e5)

    # Set the interpolator function
    gp.set_interpolator(geo_model,
                             compile_theano=True,
                             theano_optimizer='fast_compile',
                             verbose=[],
                             update_kriging=False);

    # Compute the model
    sol = gp.compute_model(geo_model)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Compiling theano function...
    Level of Optimization:  fast_compile
    Device:  cpu
    Precision:  float64
    Number of faults:  5
    Compilation Done!
    Kriging values: 
                                              values
    range                                   20000.0
    $C_o$                                  200000.0
    drift equations  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3]




.. GENERATED FROM PYTHON SOURCE LINES 149-150

Saving the model is straight forward. It can optionally also be compressed in a zip archive, or be _pickled_. An example on how to save a model is shown next. There, we give the saving path and the model name.

.. GENERATED FROM PYTHON SOURCE LINES 150-155

.. code-block:: default


    geo_model.save_model(name='POC_PCT_model', 
                         path='../../models/2021-06-04_POC_base_model')






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 156-157

Let's have a look how the created model looks like:

.. GENERATED FROM PYTHON SOURCE LINES 157-160

.. code-block:: default

    gp.plot_2d(geo_model, cell_number=25, direction='y', show_data=False, show_topography=False,
              show_lith=True, show_results=True, show_boundaries=True)




.. image:: /WP2geo_modeling/images/sphx_glr_01_POC_generate-model_002.png
    :alt: Cell Number: 25 Direction: y
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x0000022C99C5F2B0>



.. GENERATED FROM PYTHON SOURCE LINES 161-165

Simulate Gravity
================
Using the now generated POC-model, we simulate its gravity at different locations. These locations will be treated as observations later on in the workflow. 
In a first step, we distribute 15 points randomly across the topography of our model. Those will be the station locations, where we pick up the gravity signal of the POC-model.

.. GENERATED FROM PYTHON SOURCE LINES 165-176

.. code-block:: default


    # distribute stations
    import random
    np.random.seed(58)
    station_indices = np.random.randint(0, high=4999, size=15)
    station_coordinates = geo_model._grid.topography.values[station_indices, :]

    cs = plt.scatter(station_coordinates[:,0], station_coordinates[:,1], c=station_coordinates[:,2], cmap='viridis')
    plt.colorbar(cs)





.. image:: /WP2geo_modeling/images/sphx_glr_01_POC_generate-model_003.png
    :alt: 01 POC generate model
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.colorbar.Colorbar object at 0x0000022CA5B25970>



.. GENERATED FROM PYTHON SOURCE LINES 177-178

Next, we create centered grids around each station. The centered grid here has 10 cells in x- and y-direction, and extends 15 cells down in the z-direction.

.. GENERATED FROM PYTHON SOURCE LINES 178-184

.. code-block:: default


    from gempy.assets.geophysics import GravityPreprocessing
    geo_model.set_centered_grid(station_coordinates,  resolution = [10, 10, 15], radius=6000)
    g = GravityPreprocessing(geo_model.grid.centered_grid)
    tz = g.set_tz_kernel()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Active grids: ['regular' 'topography' 'centered']




.. GENERATED FROM PYTHON SOURCE LINES 185-187

The gravity response cannot be modeled without assigning a density to the model units. Theoretically, one could also assign different petrophyiscal properties here. They will be 
added as separate columns to the surfaces dataframe.

.. GENERATED FROM PYTHON SOURCE LINES 187-192

.. code-block:: default


    densities = [0, 0, 0, 0, 0, 2.466, 2.61, 2.53, 
                 2.61, 2.47, 2.55, 2.67]
    geo_model.add_surface_values(densities, ['density'])






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style  type="text/css" >
    #T_c3b48_row0_col3,#T_c3b48_row1_col3{
                background-color:  #5DA629;
            }#T_c3b48_row2_col3,#T_c3b48_row3_col3,#T_c3b48_row4_col3{
                background-color:  #015482;
            }#T_c3b48_row5_col3{
                background-color:  #dbdbac;
            }#T_c3b48_row6_col3{
                background-color:  #e588f3;
            }#T_c3b48_row7_col3{
                background-color:  #ff792b;
            }#T_c3b48_row8_col3{
                background-color:  #725c9a;
            }#T_c3b48_row9_col3{
                background-color:  #cfc199;
            }#T_c3b48_row10_col3{
                background-color:  #a5d490;
            }#T_c3b48_row11_col3{
                background-color:  #c7848f;
            }</style><table id="T_c3b48_" ><thead>    <tr>        <th class="blank level0" ></th>        <th class="col_heading level0 col0" >surface</th>        <th class="col_heading level0 col1" >series</th>        <th class="col_heading level0 col2" >order_surfaces</th>        <th class="col_heading level0 col3" >color</th>        <th class="col_heading level0 col4" >id</th>        <th class="col_heading level0 col5" >density</th>    </tr></thead><tbody>
                    <tr>
                            <th id="T_c3b48_level0_row0" class="row_heading level0 row0" >9</th>
                            <td id="T_c3b48_row0_col0" class="data row0 col0" >Thrust1_south</td>
                            <td id="T_c3b48_row0_col1" class="data row0 col1" >Thrust1_series</td>
                            <td id="T_c3b48_row0_col2" class="data row0 col2" >1</td>
                            <td id="T_c3b48_row0_col3" class="data row0 col3" >#5DA629</td>
                            <td id="T_c3b48_row0_col4" class="data row0 col4" >1</td>
                            <td id="T_c3b48_row0_col5" class="data row0 col5" >0.000000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row1" class="row_heading level0 row1" >10</th>
                            <td id="T_c3b48_row1_col0" class="data row1 col0" >Thrust2_south</td>
                            <td id="T_c3b48_row1_col1" class="data row1 col1" >Thrust2_series</td>
                            <td id="T_c3b48_row1_col2" class="data row1 col2" >1</td>
                            <td id="T_c3b48_row1_col3" class="data row1 col3" >#5DA629</td>
                            <td id="T_c3b48_row1_col4" class="data row1 col4" >2</td>
                            <td id="T_c3b48_row1_col5" class="data row1 col5" >0.000000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row2" class="row_heading level0 row2" >0</th>
                            <td id="T_c3b48_row2_col0" class="data row2 col0" >Fault2</td>
                            <td id="T_c3b48_row2_col1" class="data row2 col1" >Fault2_series</td>
                            <td id="T_c3b48_row2_col2" class="data row2 col2" >1</td>
                            <td id="T_c3b48_row2_col3" class="data row2 col3" >#015482</td>
                            <td id="T_c3b48_row2_col4" class="data row2 col4" >3</td>
                            <td id="T_c3b48_row2_col5" class="data row2 col5" >0.000000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row3" class="row_heading level0 row3" >1</th>
                            <td id="T_c3b48_row3_col0" class="data row3 col0" >Fault5</td>
                            <td id="T_c3b48_row3_col1" class="data row3 col1" >Fault5_series</td>
                            <td id="T_c3b48_row3_col2" class="data row3 col2" >1</td>
                            <td id="T_c3b48_row3_col3" class="data row3 col3" >#015482</td>
                            <td id="T_c3b48_row3_col4" class="data row3 col4" >4</td>
                            <td id="T_c3b48_row3_col5" class="data row3 col5" >0.000000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row4" class="row_heading level0 row4" >2</th>
                            <td id="T_c3b48_row4_col0" class="data row4 col0" >Fault6</td>
                            <td id="T_c3b48_row4_col1" class="data row4 col1" >Fault6_series</td>
                            <td id="T_c3b48_row4_col2" class="data row4 col2" >1</td>
                            <td id="T_c3b48_row4_col3" class="data row4 col3" >#015482</td>
                            <td id="T_c3b48_row4_col4" class="data row4 col4" >5</td>
                            <td id="T_c3b48_row4_col5" class="data row4 col5" >0.000000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row5" class="row_heading level0 row5" >6</th>
                            <td id="T_c3b48_row5_col0" class="data row5 col0" >Tertiary</td>
                            <td id="T_c3b48_row5_col1" class="data row5 col1" >Post_tectonic_series</td>
                            <td id="T_c3b48_row5_col2" class="data row5 col2" >1</td>
                            <td id="T_c3b48_row5_col3" class="data row5 col3" >#dbdbac</td>
                            <td id="T_c3b48_row5_col4" class="data row5 col4" >6</td>
                            <td id="T_c3b48_row5_col5" class="data row5 col5" >2.466000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row6" class="row_heading level0 row6" >8</th>
                            <td id="T_c3b48_row6_col0" class="data row6 col0" >Pink</td>
                            <td id="T_c3b48_row6_col1" class="data row6 col1" >Post_tectonic_series</td>
                            <td id="T_c3b48_row6_col2" class="data row6 col2" >2</td>
                            <td id="T_c3b48_row6_col3" class="data row6 col3" >#e588f3</td>
                            <td id="T_c3b48_row6_col4" class="data row6 col4" >7</td>
                            <td id="T_c3b48_row6_col5" class="data row6 col5" >2.610000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row7" class="row_heading level0 row7" >7</th>
                            <td id="T_c3b48_row7_col0" class="data row7 col0" >Orange</td>
                            <td id="T_c3b48_row7_col1" class="data row7 col1" >Post_tectonic_series</td>
                            <td id="T_c3b48_row7_col2" class="data row7 col2" >3</td>
                            <td id="T_c3b48_row7_col3" class="data row7 col3" >#ff792b</td>
                            <td id="T_c3b48_row7_col4" class="data row7 col4" >8</td>
                            <td id="T_c3b48_row7_col5" class="data row7 col5" >2.530000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row8" class="row_heading level0 row8" >5</th>
                            <td id="T_c3b48_row8_col0" class="data row8 col0" >Unconformity</td>
                            <td id="T_c3b48_row8_col1" class="data row8 col1" >Detachement</td>
                            <td id="T_c3b48_row8_col2" class="data row8 col2" >1</td>
                            <td id="T_c3b48_row8_col3" class="data row8 col3" >#725c9a</td>
                            <td id="T_c3b48_row8_col4" class="data row8 col4" >9</td>
                            <td id="T_c3b48_row8_col5" class="data row8 col5" >2.610000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row9" class="row_heading level0 row9" >4</th>
                            <td id="T_c3b48_row9_col0" class="data row9 col0" >Upper-filling</td>
                            <td id="T_c3b48_row9_col1" class="data row9 col1" >Syn_tectonic_series2</td>
                            <td id="T_c3b48_row9_col2" class="data row9 col2" >1</td>
                            <td id="T_c3b48_row9_col3" class="data row9 col3" >#cfc199</td>
                            <td id="T_c3b48_row9_col4" class="data row9 col4" >10</td>
                            <td id="T_c3b48_row9_col5" class="data row9 col5" >2.470000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row10" class="row_heading level0 row10" >3</th>
                            <td id="T_c3b48_row10_col0" class="data row10 col0" >Lower-filling</td>
                            <td id="T_c3b48_row10_col1" class="data row10 col1" >Pre_tectonic_series</td>
                            <td id="T_c3b48_row10_col2" class="data row10 col2" >1</td>
                            <td id="T_c3b48_row10_col3" class="data row10 col3" >#a5d490</td>
                            <td id="T_c3b48_row10_col4" class="data row10 col4" >11</td>
                            <td id="T_c3b48_row10_col5" class="data row10 col5" >2.550000</td>
                </tr>
                <tr>
                            <th id="T_c3b48_level0_row11" class="row_heading level0 row11" >11</th>
                            <td id="T_c3b48_row11_col0" class="data row11 col0" >basement</td>
                            <td id="T_c3b48_row11_col1" class="data row11 col1" >Basement</td>
                            <td id="T_c3b48_row11_col2" class="data row11 col2" >1</td>
                            <td id="T_c3b48_row11_col3" class="data row11 col3" >#c7848f</td>
                            <td id="T_c3b48_row11_col4" class="data row11 col4" >12</td>
                            <td id="T_c3b48_row11_col5" class="data row11 col5" >2.670000</td>
                </tr>
        </tbody></table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 193-194

Modeling the lithology on all grids (regular, topography, centered) can get time consuming. So here, we only activate the centered grid to catch the gravity response.

.. GENERATED FROM PYTHON SOURCE LINES 194-207

.. code-block:: default

    geo_model.set_active_grid('centered', reset=True)

    gp.set_interpolator(geo_model, output=['gravity'], theano_optimizer='fast_run', update_kriging=False)
    sol = gp.compute_model(geo_model)
    grav = sol.fw_gravity


    # In[24]:


    grav1 = grav.reshape(len(grav),1)
    station_forw_grav = np.append(station_coordinates, grav1, axis=1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Active grids: ['centered']
    Compiling theano function...
    Level of Optimization:  fast_run
    Device:  cpu
    Precision:  float64
    Number of faults:  5
    Compilation Done!
    Kriging values: 
                                              values
    range                                   20000.0
    $C_o$                                  200000.0
    drift equations  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3]




.. GENERATED FROM PYTHON SOURCE LINES 208-209

and finally, we save the modeled gravity to be used as observations later on:

.. GENERATED FROM PYTHON SOURCE LINES 209-212

.. code-block:: default


    np.savetxt('../../data/Data_for_MC/20210322_forw_grav_seed58.csv', station_forw_grav, fmt='%.2f, %.2f, %.2f, %.5f', header="X, Y, Z, grav")









.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  55.227 seconds)


.. _sphx_glr_download_WP2geo_modeling_01_POC_generate-model.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 01_POC_generate-model.py <01_POC_generate-model.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 01_POC_generate-model.ipynb <01_POC_generate-model.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
